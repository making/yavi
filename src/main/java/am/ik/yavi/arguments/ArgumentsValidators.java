/*
 * Copyright (C) 2018-2021 Toshiaki Maki <makingx@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package am.ik.yavi.arguments;

import am.ik.yavi.fn.Function2;
import am.ik.yavi.fn.Function3;
import am.ik.yavi.fn.Function4;
import am.ik.yavi.fn.Function5;
import am.ik.yavi.fn.Function6;
import am.ik.yavi.fn.Function7;
import am.ik.yavi.fn.Function8;
import am.ik.yavi.fn.Function9;
import am.ik.yavi.fn.Function10;

/**
 * Generated by https://github.com/making/yavi/blob/develop/scripts/generate-args.sh
 *
 * @since 0.7.0
 */
public class ArgumentsValidators {
	public static <A1, A2, X1, X2> Arguments2Combining<A1, A2, X1, X2> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2) {
		return new Arguments2Combining<>(v1, v2);
	}

	public static <A1, A2, A3, X1, X2, X3> Arguments3Combining<A1, A2, A3, X1, X2, X3> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3) {
		return new Arguments3Combining<>(v1, v2, v3);
	}

	public static <A1, A2, A3, A4, X1, X2, X3, X4> Arguments4Combining<A1, A2, A3, A4, X1, X2, X3, X4> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4) {
		return new Arguments4Combining<>(v1, v2, v3, v4);
	}

	public static <A1, A2, A3, A4, A5, X1, X2, X3, X4, X5> Arguments5Combining<A1, A2, A3, A4, A5, X1, X2, X3, X4, X5> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5) {
		return new Arguments5Combining<>(v1, v2, v3, v4, v5);
	}

	public static <A1, A2, A3, A4, A5, A6, X1, X2, X3, X4, X5, X6> Arguments6Combining<A1, A2, A3, A4, A5, A6, X1, X2, X3, X4, X5, X6> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6) {
		return new Arguments6Combining<>(v1, v2, v3, v4, v5, v6);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, X1, X2, X3, X4, X5, X6, X7> Arguments7Combining<A1, A2, A3, A4, A5, A6, A7, X1, X2, X3, X4, X5, X6, X7> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7) {
		return new Arguments7Combining<>(v1, v2, v3, v4, v5, v6, v7);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, A8, X1, X2, X3, X4, X5, X6, X7, X8> Arguments8Combining<A1, A2, A3, A4, A5, A6, A7, A8, X1, X2, X3, X4, X5, X6, X7, X8> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7, Arguments1Validator<A8, X8> v8) {
		return new Arguments8Combining<>(v1, v2, v3, v4, v5, v6, v7, v8);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, A8, A9, X1, X2, X3, X4, X5, X6, X7, X8, X9> Arguments9Combining<A1, A2, A3, A4, A5, A6, A7, A8, A9, X1, X2, X3, X4, X5, X6, X7, X8, X9> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7, Arguments1Validator<A8, X8> v8,
			Arguments1Validator<A9, X9> v9) {
		return new Arguments9Combining<>(v1, v2, v3, v4, v5, v6, v7, v8, v9);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10> Arguments10Combining<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10> combine(
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7, Arguments1Validator<A8, X8> v8,
			Arguments1Validator<A9, X9> v9, Arguments1Validator<A10, X10> v10) {
		return new Arguments10Combining<>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
	}

	public static <A1, A2, X1, X2, Y> Arguments2Validator<A1, A2, Y> apply(
			Function2<X1, X2, Y> f, Arguments1Validator<A1, X1> v1,
			Arguments1Validator<A2, X2> v2) {
		return combine(v1, v2).apply(f);
	}

	public static <A1, A2, A3, X1, X2, X3, Y> Arguments3Validator<A1, A2, A3, Y> apply(
			Function3<X1, X2, X3, Y> f, Arguments1Validator<A1, X1> v1,
			Arguments1Validator<A2, X2> v2, Arguments1Validator<A3, X3> v3) {
		return combine(v1, v2, v3).apply(f);
	}

	public static <A1, A2, A3, A4, X1, X2, X3, X4, Y> Arguments4Validator<A1, A2, A3, A4, Y> apply(
			Function4<X1, X2, X3, X4, Y> f, Arguments1Validator<A1, X1> v1,
			Arguments1Validator<A2, X2> v2, Arguments1Validator<A3, X3> v3,
			Arguments1Validator<A4, X4> v4) {
		return combine(v1, v2, v3, v4).apply(f);
	}

	public static <A1, A2, A3, A4, A5, X1, X2, X3, X4, X5, Y> Arguments5Validator<A1, A2, A3, A4, A5, Y> apply(
			Function5<X1, X2, X3, X4, X5, Y> f, Arguments1Validator<A1, X1> v1,
			Arguments1Validator<A2, X2> v2, Arguments1Validator<A3, X3> v3,
			Arguments1Validator<A4, X4> v4, Arguments1Validator<A5, X5> v5) {
		return combine(v1, v2, v3, v4, v5).apply(f);
	}

	public static <A1, A2, A3, A4, A5, A6, X1, X2, X3, X4, X5, X6, Y> Arguments6Validator<A1, A2, A3, A4, A5, A6, Y> apply(
			Function6<X1, X2, X3, X4, X5, X6, Y> f, Arguments1Validator<A1, X1> v1,
			Arguments1Validator<A2, X2> v2, Arguments1Validator<A3, X3> v3,
			Arguments1Validator<A4, X4> v4, Arguments1Validator<A5, X5> v5,
			Arguments1Validator<A6, X6> v6) {
		return combine(v1, v2, v3, v4, v5, v6).apply(f);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, X1, X2, X3, X4, X5, X6, X7, Y> Arguments7Validator<A1, A2, A3, A4, A5, A6, A7, Y> apply(
			Function7<X1, X2, X3, X4, X5, X6, X7, Y> f, Arguments1Validator<A1, X1> v1,
			Arguments1Validator<A2, X2> v2, Arguments1Validator<A3, X3> v3,
			Arguments1Validator<A4, X4> v4, Arguments1Validator<A5, X5> v5,
			Arguments1Validator<A6, X6> v6, Arguments1Validator<A7, X7> v7) {
		return combine(v1, v2, v3, v4, v5, v6, v7).apply(f);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, A8, X1, X2, X3, X4, X5, X6, X7, X8, Y> Arguments8Validator<A1, A2, A3, A4, A5, A6, A7, A8, Y> apply(
			Function8<X1, X2, X3, X4, X5, X6, X7, X8, Y> f,
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7, Arguments1Validator<A8, X8> v8) {
		return combine(v1, v2, v3, v4, v5, v6, v7, v8).apply(f);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, A8, A9, X1, X2, X3, X4, X5, X6, X7, X8, X9, Y> Arguments9Validator<A1, A2, A3, A4, A5, A6, A7, A8, A9, Y> apply(
			Function9<X1, X2, X3, X4, X5, X6, X7, X8, X9, Y> f,
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7, Arguments1Validator<A8, X8> v8,
			Arguments1Validator<A9, X9> v9) {
		return combine(v1, v2, v3, v4, v5, v6, v7, v8, v9).apply(f);
	}

	public static <A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y> Arguments10Validator<A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Y> apply(
			Function10<X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, Y> f,
			Arguments1Validator<A1, X1> v1, Arguments1Validator<A2, X2> v2,
			Arguments1Validator<A3, X3> v3, Arguments1Validator<A4, X4> v4,
			Arguments1Validator<A5, X5> v5, Arguments1Validator<A6, X6> v6,
			Arguments1Validator<A7, X7> v7, Arguments1Validator<A8, X8> v8,
			Arguments1Validator<A9, X9> v9, Arguments1Validator<A10, X10> v10) {
		return combine(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10).apply(f);
	}
}
