/*
 * Copyright (C) 2018-2025 Toshiaki Maki <makingx@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package am.ik.yavi.arguments;

import java.util.Objects;

import am.ik.yavi.fn.Function7;
import am.ik.yavi.jsr305.Nullable;

/**
 * A container class that holds 7 arguments, providing type-safe access
 * to each argument and mapping functionality to transform these arguments.
 *
 * Generated by https://github.com/making/yavi/blob/develop/scripts/generate-args.sh
 *
 * @param <A1, A2, A3, A4, A5, A6, A7> the types of the arguments
 * @since 0.3.0
 */
public class Arguments7<A1, A2, A3, A4, A5, A6, A7> extends Arguments6<A1, A2, A3, A4, A5, A6> {

	protected final A7 arg7;

	/**
	 * Creates a new Arguments7 instance with the provided arguments.
	 *
	 * @param arg1 the argument at position 1, arg2 the argument at position 2, arg3 the argument at position 3, arg4 the argument at position 4, arg5 the argument at position 5, arg6 the argument at position 6, arg7 the argument at position 7
	 */
	Arguments7(@Nullable A1 arg1, @Nullable A2 arg2, @Nullable A3 arg3, @Nullable A4 arg4, @Nullable A5 arg5, @Nullable A6 arg6, @Nullable A7 arg7) {
		super(arg1, arg2, arg3, arg4, arg5, arg6);
		this.arg7 = arg7;
	}

	/**
	 * Returns the argument at position 7.
	 *
	 * @return the argument at position 7
	 */
	@Nullable
	public final A7 arg7() {
		return this.arg7;
	}

	/**
	 * Applies the provided mapping function to all arguments contained in this instance.
	 *
	 * @param <X> the type of the result
	 * @param mapper the function to apply to the arguments
	 * @return the result of applying the mapper function to the arguments
	 */
	public final <X> X map(Function7<? super A1, ? super A2, ? super A3, ? super A4, ? super A5, ? super A6, ? super A7, ? extends X> mapper) {
		return mapper.apply(arg1, arg2, arg3, arg4, arg5, arg6, arg7);
	}
	/**
	 * Returns a new Arguments6 instance containing only the first 6 arguments.
	 *
	 * @return an Arguments6 instance with arguments from arg1 to arg6
	 * @since 0.16.0
	 */
	public final Arguments6<A1, A2, A3, A4, A5, A6> first6() {
		return new Arguments6<>(arg1, arg2, arg3, arg4, arg5, arg6);
	}


	/**
	 * Indicates whether some other object is "equal to" this one.
	 *
	 * @param obj the reference object with which to compare
	 * @return true if this object is the same as the obj argument; false otherwise
	 */
	@Override
	@SuppressWarnings("unchecked")
	public boolean equals(@Nullable Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null || getClass() != obj.getClass()) {
			return false;
		}
		Arguments7<A1, A2, A3, A4, A5, A6, A7> that = (Arguments7<A1, A2, A3, A4, A5, A6, A7>) obj;
		return Objects.equals(this.arg1, that.arg1) && Objects.equals(this.arg2, that.arg2) && Objects.equals(this.arg3, that.arg3) && Objects.equals(this.arg4, that.arg4) && Objects.equals(this.arg5, that.arg5) && Objects.equals(this.arg6, that.arg6) && Objects.equals(this.arg7, that.arg7);
	}

	/**
	 * Returns a hash code value for the object.
	 *
	 * @return a hash code value for this object
	 */
	@Override
	public int hashCode() {
		return Objects.hash(this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7);
	}

	/**
	 * Returns a string representation of the object.
	 *
	 * @return a string representation of the object
	 */
	@Override
	public String toString() {
		return "Arguments7{" + "arg1=" + this.arg1 + ", " + "arg2=" + this.arg2 + ", " + "arg3=" + this.arg3 + ", " + "arg4=" + this.arg4 + ", " + "arg5=" + this.arg5 + ", " + "arg6=" + this.arg6 + ", " + "arg7=" + this.arg7 + "}";
	}
}
